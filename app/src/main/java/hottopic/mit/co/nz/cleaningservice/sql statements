1.	Create User Table:
CREATE TABLE CT_USER(ID SERIAL PRIMARY KEY, USERNAME VARCHAR(50) NOT NULL, PASSWORD VARCHAR(50), CITY VARCHAR(255), SUBURB VARCHAR(255), STREET VARCHAR(255), PHONE VARCHAR(20), EMAIL VARCHAR(50), ROLE_ID INT , BALANCE DECIMAL);
ALTER TABLE CT_USER ADD CONSTRAINT fk_type FOREIGN KEY (ROLE_ID) REFERENCES CT_USERROLE(id);

ALTER TABLE CT_USER ALTER COLUMN CITY TYPE VARCHAR(255) USING CITY::VARCHAR(255);
ALTER TABLE CT_USER ALTER COLUMN SUBURB TYPE VARCHAR(255) USING SUBURB::VARCHAR(255);
ALTER TABLE CT_USER ALTER COLUMN STREET TYPE VARCHAR(255) USING STREET::VARCHAR(255);

INSERT INTO CT_USER (USERNAME, PASSWORD, CITY, SUBURB, STREET, PHONE, EMAIL, ROLE_ID) VALUES
                    ('staff', '123456', 'Auckland', 'Manukau City', 'Manukau Library', '022987654321', 'staff@example.com', 2);

2.	Create User Role table:
CREATE TABLE CT_USERROLE(ID SERIAL PRIMARY KEY, ROLE_NAME VARCHAR(50) NOT NULL);

3.	Insert data
INSERT INTO CT_USERROLE (ROLE_NAME) VALUES ('Customer');
INSERT INTO CT_USERROLE (ROLE_NAME) VALUES ('Staff');

4.	Login
SELECT A.ID, USERNAME, CITY, SUBURB, STREET, PHONE, EMAIL, ROLE_ID, BALANCE, ROLE_NAME FROM CT_USER AS A, CT_USERROLE AS B WHERE USERNAME= $1 AND PASSWORD= $2 AND B.ID = A.ROLE_ID;

5.	Register
INSERT INTO CT_USER (USERNAME, PASSWORD, PHONE, EMAIL, CITY, SUBURB, STREET, ROLE_ID, BALANCE) VALUES ('kevin', '123456', '0221234567', 'kevin@example.com', 'Auckland', 'Manukau City', 'Manukau Station', 1, 0);

6.	Create Main Service Type table
CREATE TABLE CT_MAIN_TYPE (ID SERIAL PRIMARY KEY, TYPE_NAME VARCHAR(50) NOT NULL);

INSERT INTO CT_MAIN_TYPE (TYPE_NAME) VALUES ('Cleaning Service');
INSERT INTO CT_MAIN_TYPE (TYPE_NAME) VALUES ('Ironing Service');

7.	Create Sub Service Type table
CREATE TABLE CT_SUB_TYPE (ID SERIAL PRIMARY KEY, MAIN_ID INT, TYPE_NAME VARCHAR(50) NOT NULL, BULK_DISCOUNT DECIMAL), ICON VARCHAR(20));

ALTER TABLE CT_SUB_TYPE ADD CONSTRAINT fk_type FOREIGN KEY (MAIN_ID) REFERENCES CT_MAIN_TYPE (id);

ALTER TABLE CT_PRODUCT ALTER COLUMN ICON TYPE VARCHAR(20) USING UNIT::VARCHAR(30);

UPDATE TABLE

INSERT INTO CT_SUB_TYPE (MAIN_ID, TYPE_NAME) VALUES (1, 'General Cleaning');
INSERT INTO CT_SUB_TYPE (MAIN_ID, TYPE_NAME) VALUES (1, 'Deep Cleaning');
INSERT INTO CT_SUB_TYPE (MAIN_ID, TYPE_NAME) VALUES (1, 'Buffering');
INSERT INTO CT_SUB_TYPE (MAIN_ID, TYPE_NAME) VALUES (1, 'Water Blasting');
INSERT INTO CT_SUB_TYPE (MAIN_ID, TYPE_NAME) VALUES (1, 'Carpet Washing');
INSERT INTO CT_SUB_TYPE (MAIN_ID, TYPE_NAME) VALUES (2, 'General Ironing');
INSERT INTO CT_SUB_TYPE (MAIN_ID, TYPE_NAME) VALUES (2, 'Steam Ironing');


8.	Create Service Product table
CREATE TABLE CT_PRODUCT (ID SERIAL PRIMARY KEY,
                        MAIN_ID INT,
                        SUB_ID INT,
                        PRODUCT_NAME VARCHAR(50) NOT NULL,
                        UNIT_PRICE DECIMAL,
                        UNIT VARCHAR(30),
                        QUANTITY INT,
                        ORDER_ID INT,
                        ICON VARCHAR(20));

ALTER TABLE CT_PRODUCT ALTER COLUMN UNIT TYPE VARCHAR(30) USING UNIT::VARCHAR(30);

ALTER TABLE CT_PRODUCT ADD CONSTRAINT fk_type FOREIGN KEY (SUB_ID) REFERENCES CT_SUB_TYPE (ID);
ALTER TABLE CT_PRODUCT ADD CONSTRAINT fk_type1 FOREIGN KEY (MAIN_ID) REFERENCES CT_MAIN_TYPE (ID);
ALTER TABLE CT_PRODUCT ADD CONSTRAINT fk_type2 FOREIGN KEY (ORDER_ID) REFERENCES CT_ORDER (ID);

INSERT INTO CT_PRODUCT (SUB_ID, MAIN_ID, PRODUCT_NAME, UNIT_PRICE, UNIT) VALUES (1, 1, '1 Bedroom', 30, '/hour');
INSERT INTO CT_PRODUCT (SUB_ID, MAIN_ID, PRODUCT_NAME, UNIT_PRICE, UNIT) VALUES (1, 1, '2 Bedrooms', 55, '/hour');
INSERT INTO CT_PRODUCT (SUB_ID, MAIN_ID, PRODUCT_NAME, UNIT_PRICE, UNIT) VALUES (1, 1, '3 Bedrooms', 80, '/hour');
INSERT INTO CT_PRODUCT (SUB_ID, MAIN_ID, PRODUCT_NAME, UNIT_PRICE, UNIT) VALUES (1, 1, '4 Bedrooms', 105, '/hour');

INSERT INTO CT_PRODUCT (SUB_ID, MAIN_ID, PRODUCT_NAME, UNIT_PRICE, UNIT) VALUES (2, 1, '1 Bedroom', 50, '/hour');
INSERT INTO CT_PRODUCT (SUB_ID, MAIN_ID, PRODUCT_NAME, UNIT_PRICE, UNIT) VALUES (2, 1, '2 Bedrooms', 95, '/hour');
INSERT INTO CT_PRODUCT (SUB_ID, MAIN_ID, PRODUCT_NAME, UNIT_PRICE, UNIT) VALUES (2, 1, '3 Bedrooms', 140, '/hour');
INSERT INTO CT_PRODUCT (SUB_ID, MAIN_ID, PRODUCT_NAME, UNIT_PRICE, UNIT) VALUES (2, 1, '4 Bedrooms', 185, '/hour');

INSERT INTO CT_PRODUCT (SUB_ID, MAIN_ID, PRODUCT_NAME, UNIT_PRICE, UNIT) VALUES (3, 1, 'Buffering' , 8, '/sqm');
INSERT INTO CT_PRODUCT (SUB_ID, MAIN_ID, PRODUCT_NAME, UNIT_PRICE, UNIT) VALUES (4, 1, 'Water Blasting' , 6, '/sqm');
INSERT INTO CT_PRODUCT (SUB_ID, MAIN_ID, PRODUCT_NAME, UNIT_PRICE, UNIT) VALUES (5, 1, 'Carpet Washing' ,5, '/sqm');

INSERT INTO CT_PRODUCT (SUB_ID, MAIN_ID, PRODUCT_NAME, UNIT_PRICE, UNIT) VALUES (6, 2, 'T-Shirt', 3, '/piece');
INSERT INTO CT_PRODUCT (SUB_ID, MAIN_ID, PRODUCT_NAME, UNIT_PRICE, UNIT) VALUES (6, 2, 'Jacket', 4, '/piece');
INSERT INTO CT_PRODUCT (SUB_ID, MAIN_ID, PRODUCT_NAME, UNIT_PRICE, UNIT) VALUES (6, 2, 'Long Dress', 4, '/piece');
INSERT INTO CT_PRODUCT (SUB_ID, MAIN_ID, PRODUCT_NAME, UNIT_PRICE, UNIT) VALUES (6, 2, 'School Uniform', 6, '/piece');

INSERT INTO CT_PRODUCT (SUB_ID, MAIN_ID, PRODUCT_NAME, UNIT_PRICE, UNIT) VALUES (7, 2, 'T-Shirt', 4, '/piece');
INSERT INTO CT_PRODUCT (SUB_ID, MAIN_ID, PRODUCT_NAME, UNIT_PRICE, UNIT) VALUES (7, 2, 'Jacket', 5, '/piece');
INSERT INTO CT_PRODUCT (SUB_ID, MAIN_ID, PRODUCT_NAME, UNIT_PRICE, UNIT) VALUES (7, 2, 'Long Dress', 5, '/piece');
INSERT INTO CT_PRODUCT (SUB_ID, MAIN_ID, PRODUCT_NAME, UNIT_PRICE, UNIT) VALUES (7, 2, 'School Uniform', 7, '/piece');



select CT_PRODUCT.ID, CT_PRODUCT.SUB_ID, CT_SUB_TYPE.TYPE_NAME AS SUB_TYPE_NAME, CT_PRODUCT.MAIN_ID, CT_MAIN_TYPE.TYPE_NAME AS MAIN_TYPE_NAME, PRODUCT_NAME, UNIT_PRICE, UNIT from CT_PRODUCT, CT_SUB_TYPE, CT_MAIN_TYPE where CT_PRODUCT.SUB_ID = CT_SUB_TYPE.ID AND CT_PRODUCT.MAIN_ID = CT_MAIN_TYPE.ID;

9. Create order table
CREATE TABLE CT_ORDER (ID SERIAL PRIMARY KEY,
                       USER_ID INT,
                       SUB_ID INT,
                       DATE VARCHAR(30),
                       CITY VARCHAR(255),
                       SUBURB VARCHAR(255),
                       STREET VARCHAR(255),
                       STATUS INT,
                       AMOUNT DECIMAL,
                       DURATION INT,
                       START_TIME VARCHAR(30),
                       END_TIME VARCHAR(30),
                       QUANTITY INT,
                       FEEDBACK VARCHAR(255),
                       RATING INT);

ALTER TABLE CT_ORDER ADD CONSTRAINT fk_type FOREIGN KEY (SUB_ID) REFERENCES CT_SUB_TYPE (ID);
ALTER TABLE CT_ORDER DROP CONSTRAINT fk_type FOREIGN KEY (SUB_ID) REFERENCES CT_SUB_TYPE (ID);

INSERT INTO CT_ORDER (USER_ID, SUB_ID, DATE, CITY, SUBURB, STREET, STATUS,
                      AMOUNT, QUANTITY, RATING)
                      VALUES ($1, $2, $3, $4, $5, $6, 0, $7, $8, 10) RETURNING ID;

10. Create sub order table
CREATE TABLE CT_SUB_ORDER (ID SERIAL PRIMARY KEY,
                           ORDER_ID INT,
                           PRODUCT_ID INT,
                           QUANTITY INT);

INSERT INTO CT_SUB_ORDER (ORDER_ID, \
                        PRODUCT_ID, \
                        QUANTITY)\
                     VALUES ($1, $2, $3);

ALTER TABLE CT_SUB_ORDER ADD CONSTRAINT fk_type FOREIGN KEY (ORDER_ID) REFERENCES CT_ORDER (ID);
ALTER TABLE CT_SUB_ORDER ADD CONSTRAINT fk_type1 FOREIGN KEY (PRODUCT_ID) REFERENCES CT_PRODUCT (ID);

SELECT O.ID AS ID,
       O.USER_ID AS USER_ID,
       O.DATE AS DATE,
       S.TYPE_NAME AS SUB_TYPE_NAME,
       S.BULK_DISCOUNT AS BULK_DISCOUNT,
       SO.ID AS PRODUCT_ID,
       P.MAIN_ID AS MAIN_ID,
       O.SUB_ID AS SUB_ID,
       P.PRODUCT_NAME AS PRODUCT_NAME,
       P.ICON AS PRODUCT_ICON,
       P.UNIT_PRICE AS UNIT_PRICE,
       P.UNIT AS UNIT,
       SO.QUANTITY AS PRODUCT_QUANTITY,
       O.PHONE AS PHONE,
       O.CITY AS CITY,
       O.SUBURB AS SUBURB,
       O.STREET AS STREET,
       O.STATUS AS STATUS,
       O.AMOUNT AS AMOUNT,
       O.DURATION AS DURATION,
       O.START_TIME AS START_TIME,
       O.END_TIME AS END_TIME,
       O.QUANTITY AS QUANTITY,
       O.FEEDBACK AS FEEDBACK,
       O.RATING AS RATING
FROM CT_ORDER AS O, CT_SUB_TYPE AS S, CT_PRODUCT AS P, CT_SUB_ORDER AS SO
WHERE SO.PRODUCT_ID = P.ID AND SO.ORDER_ID = O.ID AND O.SUB_ID = S.ID AND USER_ID = 9

SELECT O.ID AS ID,
       O.USER_ID AS USER_ID,
       O.DATE AS DATE,
       S.TYPE_NAME AS SUB_TYPE_NAME,
       S.BULK_DISCOUNT AS BULK_DISCOUNT,
       SO.ID AS PRODUCT_ID,
       P.MAIN_ID AS MAIN_ID,
       O.SUB_ID AS SUB_ID,
       S.ICON AS SUB_ICON,
       P.PRODUCT_NAME AS PRODUCT_NAME,
       P.ICON AS PRODUCT_ICON,
       P.UNIT_PRICE AS UNIT_PRICE,
       P.UNIT AS UNIT,
       SO.QUANTITY AS PRODUCT_QUANTITY,
       O.PHONE AS PHONE,
       O.CITY AS CITY,
       O.SUBURB AS SUBURB,
       O.STREET AS STREET,
       O.STATUS AS STATUS,
       O.AMOUNT AS AMOUNT,
       O.DURATION AS DURATION,
       O.START_TIME AS START_TIME,
       O.END_TIME AS END_TIME,
       O.QUANTITY AS QUANTITY,
       O.FEEDBACK AS FEEDBACK,
       O.RATING AS RATING
  FROM CT_ORDER AS O, CT_SUB_TYPE AS S, CT_PRODUCT AS P, CT_SUB_ORDER AS SO
 WHERE SO.PRODUCT_ID = P.ID AND
       SO.ORDER_ID = O.ID AND
       O.SUB_ID = S.ID AND
       STATUS < 2
       ORDER BY O.ID

UPDATE CT_ORDER SET START_TIME = '', STATUS = 0 WHERE ID = 20;
UPDATE CT_ORDER SET END_TIME = '', STATUS = 0, AMOUNT = 0, DURATION = 0 WHERE ID = 20;

11. Create discount table

CREATE TABLE CT_DISCOUNT (ID SERIAL PRIMARY KEY,
                           BALANCE DECIMAL,
                           PRICE DECIMAL);

INSERT INTO CT_DISCOUNT (BALANCE, PRICE) VALUES (1000, 800);
INSERT INTO CT_DISCOUNT (BALANCE, PRICE) VALUES (900, 750);
INSERT INTO CT_DISCOUNT (BALANCE, PRICE) VALUES (800, 700);
INSERT INTO CT_DISCOUNT (BALANCE, PRICE) VALUES (600, 550);
INSERT INTO CT_DISCOUNT (BALANCE, PRICE) VALUES (500, 480);
INSERT INTO CT_DISCOUNT (BALANCE, PRICE) VALUES (400, 390);

SELECT * FROM CT_DISCOUNT ORDER BY ID DESC;

UPDATE CT_ORDER SET STATUS = $1, FEEDBACK = $2, RATING = $3 WHERE ID = $4;
UPDATE CT_USER SET BALANCE = $1 = WHERE ID = $2;




SELECT O.ID AS ID,
                             O.USER_ID AS USER_ID,
                             O.DATE AS DATE,
                             S.TYPE_NAME AS SUB_TYPE_NAME,
                             S.BULK_DISCOUNT AS BULK_DISCOUNT,
                             SO.ID AS PRODUCT_ID,
                             P.MAIN_ID AS MAIN_ID,
                             O.SUB_ID AS SUB_ID,
                             S.ICON AS SUB_ICON,
                             P.PRODUCT_NAME AS PRODUCT_NAME,
                             P.ICON AS PRODUCT_ICON,
                             P.UNIT_PRICE AS UNIT_PRICE,
                             P.UNIT AS UNIT,
                             SO.QUANTITY AS PRODUCT_QUANTITY,
                             O.PHONE AS PHONE,
                             O.CITY AS CITY,
                             O.SUBURB AS SUBURB,
                             O.STREET AS STREET,
                             O.STATUS AS STATUS,
                             O.AMOUNT AS AMOUNT,
                             O.DURATION AS DURATION,
                             O.START_TIME AS START_TIME,
                             O.END_TIME AS END_TIME,
                             O.QUANTITY AS QUANTITY,
                             O.FEEDBACK AS FEEDBACK,
                             O.RATING AS RATING
                       FROM CT_ORDER AS O, CT_SUB_TYPE AS S, CT_PRODUCT AS P, CT_SUB_ORDER AS SO
                       WHERE SO.PRODUCT_ID = P.ID AND SO.ORDER_ID = O.ID AND O.SUB_ID = S.ID AND USER_ID = 9
                       ORDER BY O.ID